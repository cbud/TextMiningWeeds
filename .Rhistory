# Load packages
library(bib2df)
library(bibliometrix)
library(tidyverse)
#
dir()
GW<-convert2df(path2file, dbsource = "scopus", format = "bibtex")
path2file<-"Small Data Files/Good weed references.bib"
GW<-convert2df(path2file, dbsource = "scopus", format = "bibtex")
GW<-convert2df(path2file, dbsource = "isi", format = "bibtex")
path2file<-"Small Data Files/Good weeds endnote format.txt"
GW<-convert2df(path2file, dbsource = "isi", format = "endnote")
GW<-convert2df(path2file, dbsource = "scopus", format = "endnote")
GW<-convert2df(path2file,  format = "endnote")
GW<-convert2df(path2file, dbsource = "scopus", format = "endnote")
GW<-bib2df(path2file, separate_names = TRUE)
GW<-bib2df(path2file, separate_names = TRUE)
path2file<-"Small Data Files/Good weed references.bib"
GW<-bib2df(path2file, separate_names = TRUE)
View(GW)
View(GW[[5]][[52]])
install.packages("bib2df")
# Load packages
library(bib2df)
library(bibliometrix)
library(tidyverse)
#Not synching large files on github
dir()
path2file<-"Small Data Files/Good weed references.bib"
#GW<-convert2df(path2file, dbsource = "scopus", format = "endnote")
GW<-bib2df(path2file, separate_names = TRUE)
bib2df()
bib2df
#GW<-convert2df(path2file, dbsource = "scopus", format = "endnote")
GW<-bib2df(path2file, separate_names = FALSE)
View(GW)
results <- biblioAnalysis(GW, sep = ";")
#GW<-convert2df(path2file, dbsource = "scopus", format = "endnote")
GW<-bib2df(path2file, separate_names = TRUE)
results <- biblioAnalysis(GW, sep = ";")
results <- biblioAnalysis(GW)
install.packages("rscopus")
library(rscopus)
#rscopus API key 	d2dcc4a928a10f0d9184f6ced6473c3c
#
library(rscopus)
token<-
hdr = inst_token_header("d2dcc4a928a10f0d9184f6ced6473c3c" )
hdr = inst_token_header("d2dcc4a928a10f0d9184f6ced6473c3c" )
res = author_df(last_name = "Muschelli", first_name = "John", verbose = FALSE, general = FALSE, headers = hdr)
set_api_key("d2dcc4a928a10f0d9184f6ced6473c3c" )
res = author_df(last_name = "Muschelli", first_name = "John", verbose = FALSE, general = FALSE)
View(res)
res = author_df(last_name = "Buddenhagen", first_name = "C", verbose = FALSE, general = FALSE)
View(res)
res = author_df(last_name = "Buddenhagen", first_name = "C", verbose = TRUE, general = FALSE)
View(res)
authorized = is_elsevier_authorized()
#rscopus API key 	d2dcc4a928a10f0d9184f6ced6473c3c
#
library(rscopus)
set_api_key("d2dcc4a928a10f0d9184f6ced6473c3c" )
authorized = is_elsevier_authorized()
rscopus::subject_areas()
dsge_query <- rscopus::scopus_search("TITLE-ABS-KEY(weed) OR TITLE-ABS-KEY(\"Arundo dona\")",
view = "COMPLETE",
headers = insttoken)
set_api_key("d2dcc4a928a10f0d9184f6ced6473c3c" )
dsge_query <- rscopus::scopus_search("TITLE-ABS-KEY(weed) OR TITLE-ABS-KEY(\"Arundo dona\")",
view = "COMPLETE")
dsge_query <- rscopus::scopus_search("TITLE-ABS-KEY(weed) AND TITLE-ABS-KEY(\"Arundo donax\")",
view = "COMPLETE")
View(dsge_query)
dsge_data_raw <- gen_entries_to_df(dsge_query$entries)
View(dsge_data_raw)
View(dsge_data_raw)
dsge_papers <- dsge_data_raw$df
dsge_affiliations <- dsge_data_raw$affiliation
dsge_authors <- dsge_data_raw$author
View(dsge_papers)
View(dsge_authors)
View(dsge_papers)
dsge_papers$`dc:description`
weed_query <- rscopus::scopus_search("TITLE-ABS-KEY(weed) OR TITLE-ABS-KEY(invasiv) AND TITLE-ABS-KEY(\"Arundo donax\") OR TITLE-ABS-KEY(\"A. donax\")",
view = "COMPLETE")
weed_data_raw <- gen_entries_to_df(weed_query$entries)
weed_papers <- weed_data_raw$df
weed_affiliations <- weed_data_raw$affiliation
weed_authors <- weed_data_raw$author
weed_authors <- weed_data_raw$author
View(weed_authors)
View(weed_papers)
results <- biblioAnalysis(weed_papers, sep = ";")
library(bibliometrix)
results <- biblioAnalysis(weed_papers, sep = ";")
convert2df(weed_papers, dbsource = "scopus")
